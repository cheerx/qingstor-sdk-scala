{{- $service := .Data.Service -}}
{{- $subService := index .Data.SubServices .CurrentSubServiceID -}}
package com.qingstor.sdk.service

import java.time.ZonedDateTime
import com.qingstor.sdk.config.QSConfig
import com.qingstor.sdk.model.QSModels._
import com.qingstor.sdk.request.{QSRequest, ResponseUnpacker}
import com.qingstor.sdk.service.Types._
import com.qingstor.sdk.annotation.ParamAnnotation
import com.qingstor.sdk.constant.QSConstants
import com.qingstor.sdk.service.Types.QSJsonProtocol._
import akka.actor.ActorSystem
import akka.stream.ActorMaterializer
import scala.concurrent.{ExecutionContextExecutor, Future}
{{- if eq $subService.Name "Bucket"}}
import com.qingstor.sdk.service.Bucket._
import com.qingstor.sdk.util.{JsonUtil, QSRequestUtil, SecurityUtil}

class Bucket(_config: QSConfig, _bucketName: String, _zone: String)(
    implicit
    val system: ActorSystem,
    val mat: ActorMaterializer,
    val ec: ExecutionContextExecutor
) {
    val config: QSConfig = _config
    val bucketName: String = _bucketName
    val zone: String = _zone

    {{range $_, $operation := $subService.Operations}}
        {{template "RenderOperation" passThrough $subService $operation}}
    {{end}}
}

object Bucket {
    {{- range $_, $operation := $subService.Operations}}
        {{template "RenderProperty" passThrough $operation}}
    {{- end}}
}
{{- else if eq $subService.Name "Object"}}
import akka.http.scaladsl.unmarshalling.Unmarshal
import com.qingstor.sdk.service.Object._
import java.io.File

class Object(_config: QSConfig, _bucketName: String, _zone: String)(
    implicit val system: ActorSystem,
    val mat: ActorMaterializer,
    val ec: ExecutionContextExecutor
) {
    val config: QSConfig = _config
    val bucketName: String = _bucketName
    val zone: String = _zone

    {{range $_, $operation := $subService.Operations}}
        {{template "RenderOperation" passThrough $subService $operation}}
    {{end}}
}

object Object {
    {{range $_, $operation := $subService.Operations}}
        {{template "RenderProperty" passThrough $operation}}
    {{end}}
}
{{end}}